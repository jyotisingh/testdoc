function compare(a,b){if(assert.equal(typeof a,typeof b,"types didn't match"),"object"!=typeof a||null===a)assert.strictEqual(a,b,"result doesn't equal expected");else for(var c in a)assert.ok(c in b,"result didn't contain property "+c),compare(a[c],b[c])}var fs=require("fs"),path=require("path"),assert=require("assert"),util=require("util"),Parser=require("htmlparser2").Parser,Handler=require("../"),basePath=path.resolve(__dirname,"cases"),inspectOpts={showHidden:!0,depth:null};fs.readdirSync(basePath).filter(RegExp.prototype.test,/\.json$/).map(function(a){return path.resolve(basePath,a)}).map(require).forEach(function(a){it(a.name,function(){var b=a.expected,c=new Handler(function(a,c){assert.ifError(a);try{compare(b,c)}catch(d){throw d.expected=util.inspect(b,inspectOpts),d.actual=util.inspect(c,inspectOpts),d}},a.options),d=a.html,e=new Parser(c,a.options);if(a.streaming||void 0===a.streaming){for(var f=0;f<d.length;f++)e.write(d.charAt(f));e.done()}e.parseComplete(d)})});
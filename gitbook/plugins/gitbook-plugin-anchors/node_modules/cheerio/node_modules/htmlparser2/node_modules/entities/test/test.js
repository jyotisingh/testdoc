var assert=require("assert"),path=require("path"),entities=require("../");describe("Encode->decode test",function(){var a=[{input:"asdf & ÿ ü '",xml:"asdf &amp; &#xFF; &#xFC; &apos;",html:"asdf &amp; &yuml; &uuml; &apos;"},{input:"&#38;",xml:"&amp;#38;",html:"&amp;&num;38&semi;"}];a.forEach(function(a){var b=entities.encodeXML(a.input);it("should XML encode "+a.input,function(){assert.equal(b,a.xml)}),it("should default to XML encode "+a.input,function(){assert.equal(entities.encode(a.input),a.xml)}),it("should XML decode "+b,function(){assert.equal(entities.decodeXML(b),a.input)}),it("should default to XML encode "+b,function(){assert.equal(entities.decode(b),a.input)}),it("should default strict to XML encode "+b,function(){assert.equal(entities.decodeStrict(b),a.input)});var c=entities.encodeHTML5(a.input);it("should HTML5 encode "+a.input,function(){assert.equal(c,a.html)}),it("should HTML5 decode "+c,function(){assert.equal(entities.decodeHTML(c),a.input)})})}),describe("Decode test",function(){var a=[{input:"&amp;amp;",output:"&amp;"},{input:"&amp;#38;",output:"&#38;"},{input:"&amp;#x26;",output:"&#x26;"},{input:"&amp;#X26;",output:"&#X26;"},{input:"&#38;#38;",output:"&#38;"},{input:"&#x26;#38;",output:"&#38;"},{input:"&#X26;#38;",output:"&#38;"},{input:"&#x3a;",output:":"},{input:"&#x3A;",output:":"},{input:"&#X3a;",output:":"},{input:"&#X3A;",output:":"}];a.forEach(function(a){it("should XML decode "+a.input,function(){assert.equal(entities.decodeXML(a.input),a.output)}),it("should HTML4 decode "+a.input,function(){assert.equal(entities.decodeHTML(a.input),a.output)}),it("should HTML5 decode "+a.input,function(){assert.equal(entities.decodeHTML(a.input),a.output)})})});var levels=["xml","entities"];describe("Documents",function(){function a(){Object.keys(b).forEach(function(a){assert.equal(entities.decodeHTML("&"+a),b[a])})}levels.map(function(a){return path.join("..","maps",a)}).map(require).forEach(function(a,b){describe("Decode",function(){it(levels[b],function(){Object.keys(a).forEach(function(c){for(var d=b;d<levels.length;d++)assert.equal(entities.decode("&"+c+";",d),a[c])})})}),describe("Decode strict",function(){it(levels[b],function(){Object.keys(a).forEach(function(c){for(var d=b;d<levels.length;d++)assert.equal(entities.decodeStrict("&"+c+";",d),a[c])})})}),describe("Encode",function(){it(levels[b],function(){Object.keys(a).forEach(function(c){for(var d=b;d<levels.length;d++)assert.equal(entities.decode(entities.encode(a[c],d),d),a[c])})})})});var b=require("../maps/legacy.json");describe("Legacy",function(){it("should decode",a)})});var astral={"1D306":"𝌆","1D11E":"𝄞"},astralSpecial={80:"€",110000:"�"};describe("Astral entities",function(){Object.keys(astral).forEach(function(a){it("should decode "+astral[a],function(){assert.equal(entities.decode("&#x"+a+";"),astral[a])}),it("should encode "+astral[a],function(){assert.equal(entities.encode(astral[a]),"&#x"+a+";")})}),Object.keys(astralSpecial).forEach(function(a){it("special should decode \\u"+a,function(){assert.equal(entities.decode("&#x"+a+";"),astralSpecial[a])})})});